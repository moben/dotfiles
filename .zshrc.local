export BROWSER=firefox

# PATH anipulation
#   Android
[[ -e "${HOME}/Hacking/android" ]] && export PATH="${PATH}:${HOME}/Hacking/android/sdk/tools:${HOME}/Hacking/android/sdk/platform-tools"
#   rustup
[[ -e "${HOME}/.cargo/env" ]] && source "${HOME}/.cargo/env"

export PATH="${HOME}/bin:${HOME}/.local/bin:${HOME}/.emacs.d/bin:${PATH}"

export PAGER="less -R"

export GTK2_RC_FILES="${HOME}"/.gtkrc-2.0

# find terminal
_find_term() {
    local terminals=( 'germinal', 'gnome-terminal' )
    for t in "${terminals[@]}"; do
        which "${t}" &>/dev/null || continue
        export TERMINAL="${t}"
        break
    done
}
_find_term

export GTK_IM_MODULE=xim
export QT_IM_MODULE=xim

zmodload zsh/datetime

if [[ $UID == 0 ]] ; then
    zstyle ':prompt:grml:*:items:user' pre '%F{red}'
else
    zstyle ':prompt:grml:*:items:user' pre '%F{blue}'
fi


# if [[ "$TERM" == "xterm" ]]; then
#     # No it isn't, it's gnome-terminal
#     export TERM=xterm-256color
# fi

if [[ "$COLORTERM" == "yes" ]]; then
    # gnome terminal (some versions?)
    export COLORTERM=truecolor
fi

bmake() {
    bear -o compile_commands.tmp -- make "${@}"
    head -n-1 compile_commands.tmp >> compile_commands.new
    echo ',' >> compile_commands.new
    tail -n+2 compile_commands.json >> compile_commands.new
    mv compile_commands.new compile_commands.json
    rm compile_commands.tmp
}

alias mnt="findmnt --df"

alias vp=$PAGER
alias cavec='cave fix-cache ; cave generate-metadata ; cave manage-search-index -c /var/cache/paludis/cave-search-index'
alias caves='cave search --index /var/cache/paludis/cave-search-index '
alias caveu="cave resolve -c -Cs -P '*/*' world -Rw "


cavesc() {
    cave sync $*
    cavec
}

cavewatch() {
    less -R /var/log/paludis/([0-9]##-${2:-"install"}-*${1}*.out)(.om[1])
}

compdef _cave_cmd_sync cavesc=cave
compdef _cave_cmd_search caves=cave
compdef _cave_cmd_resolve caver=cave
compdef _cave_cmd_resolve caveu=cave

_cnf() {
    local GIT_DIR=$(cnf rev-parse --git-dir)
    export GIT_DIR
    _git "${@}"
}
compdef _cnf cnf=git

_zshrc_cnf_changed() {
    REPLY=''
    local dirty lcommits rcommits
    [[ $(cnf status --porcelain) != "" ]] && dirty=1 || dirty=0
    [[ $(cnf rev-parse origin/master) != $(cnf rev-parse HEAD) ]] && lcommits=1 || lcommits=0
    cnf merge-base --is-ancestor origin/master HEAD && rcommits=0 || rcommits=1
    case ${dirty}${rcommits}${lcommits} in
        11?) REPLY='â€½ ' ;;
        10?) REPLY='? ' ;;
        01?) REPLY='! ' ;;
        001) REPLY='. ' ;;
    esac
}

grml_theme_add_token cnf_changed -f _zshrc_cnf_changed '%B%F{yellow}' '%f%b'
# hopefully the default doesn't change too often :-/
zstyle ':prompt:grml:left:setup' items rc change-root user at host path vcs cnf_changed percent

eval `dircolors -b /etc/DIR_COLORS`
source ~/.base16-shell/base16-shell.plugin.zsh
# base16_gruvbox-light-medium
# base16_eighties
base16_dracula

if type -f VCS_INFO_get_data_git &>/dev/null; then
    eval "$(type -f VCS_INFO_get_data_git  | sed -e 's#--show-toplevel )#--show-toplevel 2> /dev/null); if [[ -z ${gitbase} ]]; then gitbase=${gitdir:P}; fi;#g')"
fi

[[ -e ~/.zshrc.host ]] && source ~/.zshrc.host
