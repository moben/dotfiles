[user]
	name = Benedikt McMullin
	email = benedikt@mcmullin.de
	signingkey = 12AFB46F

[github]
	user = moben

[sendemail "gmail"]
	from = Benedikt Morbach <benedikt.morbach@googlemail.com>
	smtpencryption = tls
	smtpserver = smtp.gmail.com
	smtpuser = benedikt.morbach@googlemail.com
	smtpserverport = 587

[url "git@github.com:moben/"]
	InsteadOf = "https://github.com/moben/"
	InsteadOf = "http://github.com/moben/"
	InsteadOf = "git://github.com/moben/"
	InsteadOf = "gh:moben/"

[url "git@github.com:"]
	pushInsteadOf = "https://github.com"
	pushInsteadOf = "http://github.com"
	pushInsteadOf = "git://github.com"
	pushInsteadOf = "gh:"

[url "ssh://git@git.exherbo.org"]
	pushInsteadOf = "git://git.exherbo.org"
	pushInsteadOf = "https://git.exherbo.org"

[url "ssh://git@gitlab.exherbo.org"]
	pushInsteadOf = "https://gitlab.exherbo.org"

; [color]
; 	ui = always

[diff]
	renames = copies
	algorithm = histogram

[log]
	mailmap = true

[credential]
	helper = libsecret

[sendemail]
	smtpencryption = tls

[core]
	quotePath = false
	commitGraph = true
[protocol]
	version = 2
[gc]
	writeCommitGraph = true

[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
	writeCommitGraph = true
	parallel = 0
[receive]
	fsckObjects = true

[pull]
	rebase = true
[merge]
	ff = no

[rerere]
	enabled = true

[alias]
	rbi = "!                                            \
	    g() {                                           \
	        git rebase -i origin/${1:-master};          \
	     }; g"
	expush = "!                                         \
	    f() {                                           \
	        local state=$(git status --porcelain);      \
	        local hash=$(git rev-parse --verify HEAD);  \
	        if [[ -n ${state} ]]; then                  \
	            echo 'Dirty tree:';                     \
	            echo ${state};                          \
	            return 2;                               \
	        fi;                                         \
	        if git rebase -i @{u}; then                 \
	            git push origin HEAD:refs/heads/${1};   \
	        fi;                                         \
	        git reset --hard ${hash};                   \
	        git rebase @{u};                            \
	    }; f"
	wba = "!                                                         \
	    f() {                                                        \
	        if [[ ${#} -ge 2 ]]; then                                \
	            base=${2};                                           \
	        elif [[ -n $(git show-ref --heads --tags ${1}) ]]; then  \
	            base=${1};                                           \
	        elif [[ -n $(git show-ref origin/${1}) ]]; then          \
	            base=origin/${1};                                    \
	        else                                                     \
	            git fetch --tags --prune;                            \
	            if [[ -n $(git show-ref origin/${1}) ]]; then        \
	                base=origin/${1};                                \
	            else                                                 \
	                base=master;                                     \
	            fi;                                                  \
	        fi;                                                      \
	        [[ -n ${base} ]] || return 2;                            \
	        git worktree add -b ${1} ${1} ${base};                   \
	    }; f"
	wbd = "!                                                         \
	    f() {                                                        \
	        git worktree remove ${1};                                \
	        cd master;                                               \
	        while true; do                                           \
	            git branch -d ${1} && break;                         \
	            read -p 'Not fully merged, delete anyway? [Yn] ' yn; \
	            case $yn in                                          \
	                [Yy]*|'') git branch -D ${1}; break;;            \
	                [Nn]*) break;;                                   \
	                *) echo 'Please answer yes or no.';;             \
	            esac;                                                \
	        done;                                                    \
		}; f"
[tig]
	blame-options = -C -C
	diff-options = -M10 -C -C --histogram
	diff-highlight = true
	mailmap = true

[include]
	path = ~/.gitconfig.local
[interactive]
	diffFilter = diff-highlight
[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less
[commit]
	verbose = 2
[rebase]
	autoStash = true
	autoSquash = true
